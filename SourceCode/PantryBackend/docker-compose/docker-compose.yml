version: '3.4'
networks:
  pantry-network:

volumes:
  pantry-data:
    driver: local
  rabbitmq-data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

services: 
  pantry.api:    
    container_name: pantry-api
    image: ${DOCKER_REGISTRY-}pantryapi
    build:
      context: ../Pantry.Api/.
      dockerfile: ../Pantry.Api/Dockerfile
    ports:
      - 8083:8080
    environment:
      - DB_HOST=pantry.postgres
      - DB_PORT=5432
      - DB_DB=pantry
      - DB_USER=pantry
      - DB_PASSWORD=pantry
      - RABBITMQ__HOST=rabbitmq
      - RABBITMQ__PORT=5672
      - RABBITMQ__USER=pantry
      - RABBITMQ__PASSWORD=pantry
      - RABBITMQ__QUEUENAME=Pantry.Api
      - ALLOWED_ORIGINS=http://localhost:5173
      - JAEGER__PROTOCOL=http
      - JAEGER__HOST=jaeger
      - JAEGER__PORT=4317
    restart: always
    networks:
      - pantry-network
    depends_on:
      - pantry.postgres
      - rabbitmq

  pantry.postgres:
    container_name: pantry-postgres
    image: postgres:17.0
    volumes:
      - pantry-data:/var/lib/postgresql/data
    ports:
      - 5434:5432
    restart: always
    environment:
      - POSTGRES_USER=pantry
      - POSTGRES_PASSWORD=pantry
      - POSTGRES_DB=pantry
    networks:
      - pantry-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pantry -d pantry"]
      interval: 5s
      timeout: 5s
      retries: 5      
 
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672 #http://localhost:15672/#/
    environment:
      - RABBITMQ_DEFAULT_USER=pantry
      - RABBITMQ_DEFAULT_PASS=pantry
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/
      - rabbitmq-data:/var/log/rabbitmq
    networks:
      - pantry-network

#https://github.com/vegasbrianc/prometheus
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - pantry.recipe.api:pantry.recipe.api
      - pantry.plan.api:pantry.plan.api
      - pantry.api:pantry.api
      - pantry.scanner.api:pantry.scanner.api
#      - cadvisor:cadvisor
#      - alertmanager:alertmanager
#    depends_on:
#      - cadvisor
    networks:
      - pantry-network
    restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana
    user: "472"
#    environment:
#      - GF_INSTALL_PLUGINS='grafana-clock-panel,grafana-simple-json-datasource'
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - pantry-network
    restart: always

  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    ports:      
      - 16686:16686
      - 4317:4317
    restart: always
    volumes:
      - "./jaeger/jaeger-ui.json:/etc/jaeger/jaeger-ui.json"
    command: --query.ui-config /etc/jaeger/jaeger-ui.json
    environment:
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
    networks:
      - pantry-network
